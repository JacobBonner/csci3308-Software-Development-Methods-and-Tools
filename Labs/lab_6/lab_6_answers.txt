Name: Jake Bonner

4. Creating Tables & Inserting Data


    1. Create table for competing universities

        CREATE TABLE IF NOT EXISTS universities(
            university_name TEXT PRIMARY KEY,
            date_established INT,
            address TEXT,
            student_population INT,
            acceptance_rate DECIMAL
        );


    2. Insert values into the universities table

        INSERT INTO universities(university_name,date_established,address,student_population,acceptance_rate)
        VALUES('CU Boulder',1876,'1100 28th St, Boulder, CO 80303',35000,0.8);



5. Query Basics


    1. Football Players (name & major), organized by major in college.

        SELECT name,major FROM football_players ORDER BY major ASC;


    2. Football Players (name & rushing yards) who have 70 or more rushing yards.

        SELECT name,rushing_yards FROM football_players WHERE rushing_yards >= 70;


    3. Games played against Nebraska (show all game information).

        SELECT visitor_name,home_score,visitor_score,game_date,players FROM football_games WHERE visitor_name = 'Nebraska';


    4. All of the games CU Boulder has won.

        SELECT visitor_name,home_score,visitor_score,game_date,players FROM football_games WHERE home_score > visitor_score;


    5. All of the games played in the Fall 2018 Season (show team name & game date).

        SELECT visitor_name,game_date FROM football_games WHERE game_date >= '2018-09-01' AND game_date < '2018-12-01';


    6. The average number of points CU has scored in past games.

        SELECT AVG(home_score) FROM football_games;


    7. Majors of the Football players and calculate how many of them are in each of the majors listed. Rename the column where you calculate the majors to number_of_players.
        
        SELECT DISTINCT major, COUNT(major) as "number_of_players" FROM football_players GROUP BY major ORDER BY major ASC;


    8. Modify the above query to include only the Football players who are majoring in Computer Science.
        
        SELECT DISTINCT major, COUNT(major) as "number_of_players" FROM football_players WHERE major='CSCI' GROUP BY major;



6. Views & SubQueries


    1. Create a view that counts the total number of winning games.

        CREATE VIEW total_wins AS SELECT COUNT(*) FROM football_games WHERE home_score > visitor_score;


    2. Create a view that counts the total number of games played.

        CREATE VIEW total_games AS SELECT COUNT(*) FROM football_games;


    3. Use the two views you created (from 6.1 and 6.2) to calculate the percent of wins.

        SELECT ((SELECT count FROM total_wins)/CAST((SELECT count FROM total_games) as float))*100;



7. Handling Joins

    1. Count how many games "Cedric Vega" has played in during his entire football career.

        SELECT COUNT(*) FROM football_games LEFT OUTER JOIN football_players ON ARRAY[football_players.id] <@ football_games.players WHERE football_players.name = 'Cedric Vega';


    2. Calculate the average number of rushing yards for "Cedric Vega", based on the number of games he has played

        SELECT ((SELECT rushing_yards FROM football_players WHERE name='Cedric Vega')/CAST((SELECT COUNT(*) FROM football_games LEFT OUTER JOIN football_players ON ARRAY[football_players.id] <@ football_games.players WHERE football_players.name = 'Cedric Vega') as float)) as "avg_rushing_yards";